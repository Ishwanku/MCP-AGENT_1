# MCP Document Merge Agent - Project Metadata and Dependency Configuration
#
# This file defines the project metadata, dependencies, and build system for the MCP Document Merge Agent.
# It uses the Poetry format to specify required and optional dependencies, allowing for flexible installation
# of LLM providers (Ollama, OpenAI, Gemini) via extras. This is the primary file for managing project dependencies.
#
# Usage:
#   - Install base project: `pip install .`
#   - Install with specific LLM provider: `pip install .[ollama]`, `pip install .[openai]`, or `pip install .[gemini]`
#   - Install with all optional dependencies: `pip install .[all]`

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "mcp-agent"
version = "0.1.0"
description = "MCP Document Merge Agent for combining multiple document types into a single Word document"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
dependencies = [
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "python-docx>=0.8.11",
    "python-dotenv>=0.19.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "PyPDF2>=3.0.0",
    "pandas>=2.0.0",
    "Pillow>=10.0.0",
    "lxml>=4.9.0",
    "markdown>=3.4.0",
    "python-pptx>=0.6.21",
    "svglib>=1.5.1",
    "reportlab>=4.0.0",
    "pdfplumber>=0.11.6",
    "pdf2docx>=0.5.8",
    "openai>=1.12.0",
    "ollama>=0.1.6"
]
requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0"
]

[tool.setuptools]
packages = ["mcp"]

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.poetry]
name = "mcp-agent"
version = "0.1.0"
description = "MCP Document Merge Agent for combining multiple document types into a single Word document"
readme = "README.md"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
packages = [
    { include = "mcp", from = "." }
]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.92.0"
uvicorn = "^0.20.0"
python-dotenv = "^1.0.0"
pydantic-settings = "^2.5.2"
python-docx = "^0.8.11"
pypdf2 = "^3.0.1"
pdfplumber = "^0.10.2"
pdf2docx = "^0.5.6"
python-pptx = "^0.6.21"
pillow = "^10.0.0"
ollama = {version = "^0.1.6", optional = true}
openai = {version = "^1.12.0", optional = true}
google-generativeai = {version = "^0.5.4", optional = true}

[tool.poetry.extras]
ollama = ["ollama"]
openai = ["openai"]
gemini = ["google-generativeai"]
all = ["ollama", "openai", "google-generativeai"]

[tool.poetry.group.gemini.dependencies]
google-generative-ai = "^0.7.2"